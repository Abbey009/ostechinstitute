'use client';import { useSearchParams } from 'next/navigation';import { useEffect, useState } from 'react';import { db } from '@/lib/firebase/firebaseConfig';import { doc, getDoc } from 'firebase/firestore';
export default function VerifyCertificatePage() {  const searchParams = useSearchParams();  const certId = searchParams.get('certId');  const [certificate, setCertificate] = useState<any>(null);  const [error, setError] = useState<string | null>(null);
  useEffect(() => {    const fetchCertificate = async () => {      if (!certId) return;      try {        const certRef = doc(db, 'certificates', certId);        const certSnap = await getDoc(certRef);        if (certSnap.exists()) {          setCertificate(certSnap.data());        } else {          setError('Certificate not found');        }      } catch (err) {        console.error(err);        setError('Error retrieving certificate');      }    };    fetchCertificate();  }, [certId]);
  if (!certId) {    return <p className="p-8 text-red-600 text-center">No certificate ID provided.</p>;  }
  if (error) {    return <p className="p-8 text-red-600 text-center">{error}</p>;  }
  if (!certificate) {    return <p className="p-8 text-gray-600 text-center">Loading certificate...</p>;  }
  return (    <div className="max-w-xl mx-auto p-8 text-center bg-white shadow-md rounded-lg mt-12">      <h1 className="text-3xl font-bold text-blue-700 mb-6">Certificate Verified</h1>      <p className="text-lg text-gray-800">        <strong>{certificate.name}</strong> successfully completed        <br />        <span className="text-blue-600 font-semibold">{certificate.courseTitle}</span>      </p>      <p className="text-sm text-gray-500 mt-4">        Issued on: {certificate.completedAt?.toDate().toLocaleDateString()}      </p>      <p className="text-sm text-gray-500">Certificate ID: {certId}</p>    </div>  );}
